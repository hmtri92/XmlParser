<?xml version="1.0" encoding="UTF-8"?>

   <!DOCTYPE sql-map PUBLIC "-//iBATIS.com//DTD SQL Map 1.0//EN" "http://www.ibatis.com/dtd/sql-map.dtd">

<sql-map name="TlsLicenceAuthSQL">

    <result-map name="blkListCnt_result" class="com.testHibernate.TestDTO">
        <property name="strCnt" column="cntBlk"/>
        <property name="strClientID" column="clientid"/>
        <property name="strApplnName" column="cname"/>
        <property name="strNRIC" column="nricno"/>
        <property name="strCaseRefNo" column="caseref"/>
     </result-map>

    <result-map name="licradioauthdtl_result" class="com.testHibernate.TestDTO">
        <property name="strTransID" column="transid"/>
        <property name="strClientID" column="clientid"/>
        <property name="strInitFeeInd" column="initind"/>
        <property name="strNetFeeInd" column="netind"/>
        <property name="strApplNo" column="applno"/>
        <property name="strStatusCd" column="statuscd"/>
        <property name="strStatusDesc" column="statusdesc"/>
        <property name="strDuration" column="duration"/>
        <property name="strFeeCd" column="feecd"/>
        <property name="strFeeDesc" column="feedesc"/>
        <property name="strOnlineID" column="onlineid"/>
        <property name="lstRemarks" column="remarks"/>
        <property name="strSNMRemks" column="snmremks"/>
        <property name="strInitialFee" column="initfee"/>
        <property name="strNetwrkFee" column="netwrkfee"/>
        <property name="strStationFee" column="statfee"/>
        <property name="strcallsignFee" column="callsignfee"/>
        <property name="strFreqFee" column="freqfee"/>
        <property name="strGSTInd" column="gstind"/>
        <property name="strApplnName" column="applname"/>
        <property name="strSBOProrate" column="prorate"/>        
        <!-- comment -->
        <property name="strCourierFee" column="courierFee"/>
        <property name="strCourierFeeCd" column="courierFeeCd"/>
        <property name="strCourierFeeInd" column="courierFeeInd"/>        
    </result-map>

    <dynamic-mapped-statement name="getLicAuthType" result-map="licauthtype_result">
    SELECT
      MD.ACCOUNT_TYPE code,
      MD.ITEM_DESC descp
	  FROM
     M_MASTER_DTL MD
     WHERE
     MD.MSTR_TYPE = 'AUTHTYPE'
     AND MD.ITEM_CD LIKE #strLicGrp#||'%'
     <dynamic>
         <isNotEqual property="strLicGrp" compareValue="ENF">
            OR MD.ITEM_CD= 'ALL'
          </isNotEqual>
     </dynamic>
    </dynamic-mapped-statement>


    <dynamic-mapped-statement name="getROCandFee" result-map="licCandFee_result">
   SELECT rc.EXAM_FEE_CD feecd, count(rc.EXAM_FEE_CD) qnty,
     get_fee(rc.EXAM_FEE_CD, #strLicGroup:varchar#,1,NULL) feeamt
	  FROM RO_EXAM_INFO ri, RO_EXAM_CAND_DTLS rc 
	  WHERE 
	     ri.exam_no=#strTransID:NUMBER#
	     and rc.EXAM_NO = ri.exam_no 
		 GROUP BY rc.exam_fee_cd
    </dynamic-mapped-statement>


    <mapped-statement name="getBlkList" result-map="blkListCnt_result">
select count(*) cntBlk,
      ai.CLIENT_ID clientid, 
      mb.NAME cname,
      mb.NRIC_PASSPORT_NO nricno,
      mb.CASE_REF caseref
      from M_BLACKLIST mb, applicant_agent_info ai
       where mb.NRIC_PASSPORT_NO IN (select ai.APPLT_AGENT_NRIC_PASSPORT_NO 
	  from applicant_agent_info ai 
	  where ai.CLIENT_ID= #strClientID#)
  	  and ai.client_id=#strClientID#
	 group by ai.client_id,mb.name, mb.nric_passport_no, mb.CASE_REf
    </mapped-statement>

</sql-map>